name: Pre-Release
description: 'Create a pre-release.'

inputs:
  app-id:
    description: 'The app id of the GitHub App.'
    required: true
  app-private-key:
    description: 'The private key of the GitHub App.'
    required: true
  prerelease-name:
    description: 'The name of the prerelease.'
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - name: Generate app token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.app-private-key }}

    - name: Get GitHub App User ID
      id: get-user-id
      shell: bash
      run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Set git user
      shell: bash
      run: |
        git config --global user.name '${{ steps.generate-token.outputs.app-slug }}[bot]'
        git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'

    - id: prerelease-branch-name
      shell: bash
      run: |
        echo "name=${{ github.ref_name }}--pre-release--${{ inputs.prerelease-name }}" >> "$GITHUB_OUTPUT"

    - name: Check release exists
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        if [[ `gh release view ${{ inputs.prerelease-name }} 2>&1` != *"not found"* ]]; then
          echo "::error::Release ${{ inputs.prerelease-name }} already exists."
          exit 1
        fi

    - name: Create new tag
      shell: bash
      run: |
        git checkout ${{ github.ref_name }}
        git tag ${{ inputs.prerelease-name }}
        git push origin tag ${{ inputs.prerelease-name }}

    - name: Create GitHub release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        gh release create ${{ inputs.prerelease-name }} --title "v${{ inputs.prerelease-name }}" --generate-notes --prerelease
