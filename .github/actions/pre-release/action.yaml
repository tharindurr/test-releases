name: Pre-Release
description: 'Create a pre-release.'

inputs:
  app-id:
    description: 'The app id of the GitHub App.'
    required: true
  app-private-key:
    description: 'The private key of the GitHub App.'
    required: true
  release-type:
    description: The technology stack of the project. python, node, go.
    required: true
  version:
    description: The version to pre-release from.
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - name: Generate app token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.app-private-key }}

    - name: Get GitHub App User ID
      id: get-user-id
      shell: bash
      run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Set git user
      shell: bash
      run: |
        git config --global user.name '${{ steps.generate-token.outputs.app-slug }}[bot]'
        git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'

    - name: Check release exists
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        if [[ `gh release view ${{ inputs.version }} 2>&1` != *"not found"* ]]; then
          echo "::error::Release ${{ inputs.version }} already exists."
          exit 1
        fi

    - name: Create pre rerelease tag
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        git tag ${{ inputs.version }} -m "Pre-release ${{ inputs.version }}"
        git push origin ${{ inputs.version }}
        if [[ "${{ inputs.notes-start-tag }}" == "" ]]; then
          gh release create ${{ inputs.version }} --title "v${{ inputs.version }}" --generate-notes --prerelease
        else
          gh release create ${{ inputs.version }} --title "v${{ inputs.version }}" --notes-from-tag ${{ inputs.notes-start-tag }} --prerelease
        fi
