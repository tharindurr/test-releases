name: Pre-Release

on:
  workflow_dispatch:

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'

    - name: Get latest tag
      id: get_latest_tag
      run: |
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        if [ -z "$LATEST_TAG" ]; then
          LATEST_TAG="v0.1.0"
        fi
        echo "::set-output name=latest_tag::$LATEST_TAG"

    - name: Determine new prerelease version
      id: determine_version
      run: |
        if [[ "${{ steps.get_latest_tag.outputs.latest_tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-prerelease\.[0-9]+$ ]]; then
          BASE_VERSION=$(echo "${{ steps.get_latest_tag.outputs.latest_tag }}" | sed -E 's/-prerelease\.[0-9]+$//')
          PREVIOUS_NUMBER=$(echo "${{ steps.get_latest_tag.outputs.latest_tag }}" | sed -E 's/.*-prerelease\.([0-9]+)$/\1/')
          NEW_NUMBER=$((PREVIOUS_NUMBER + 1))
          NEW_VERSION="${BASE_VERSION}-prerelease.$NEW_NUMBER"
        else
          NEW_VERSION="${{ steps.get_latest_tag.outputs.latest_tag }}-prerelease.1"
        fi
        echo "::set-output name=new_version::$NEW_VERSION"

    - name: Test new version
      run: |
        echo "New version: ${{ steps.determine_version.outputs.new_version }}"
